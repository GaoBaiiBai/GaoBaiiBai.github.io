<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>用Python爬虫实现翻译功能</title>
    <url>/2020/03/02/Pachong_Fanyi/</url>
    <content><![CDATA[<p>写这篇文档的主要初衷是因为：因为前几天的美赛，由于我们要通过评论的内容找到该评论的情感倾向，但是由于Excel内的翻译功能支持不了大规模的数据进行翻译，然后其他的一些在线翻译的软件需要付费，所以自己写了一个端口用于翻译。（本篇文章内容的翻译仅支持小规模数据，做到及翻及储，大规模数模进行多次翻译还是会出现无连接的情况）</p>
<a id="more"></a>
<h3 id="一、文章说明"><a href="#一、文章说明" class="headerlink" title="一、文章说明"></a>一、文章说明</h3><p>一开始在Github上找能对Excel进行翻译的时候发现了一篇通过爬虫实现翻译的源码，然而我并没有看里面的内容，就直接进行运行，导致因为访问频率过快导致直接被谷歌直接封掉了端口，所以以下的内容都是基于<strong>有道翻译</strong>    的翻译进行端口的实现。（非常感谢我某位朋友给我找的Github上的源码使得我比赛期间的谷歌端口一直不能使用）</p>
<h3 id="二、端口分析"><a href="#二、端口分析" class="headerlink" title="二、端口分析"></a>二、端口分析</h3><ul>
<li><ol>
<li>首先我们先打开有道翻译的界面，按住F12（建议使用谷歌浏览器），选择XHR<br><img src="/images/test%E5%9B%BE%E7%89%87/%E5%9B%BE%E7%89%871.png" alt=""></li>
</ol>
</li>
<li><ol start="2">
<li>在请输入你要翻译的文字或网址内输入要翻译的内容<br><img src="/images/test%E5%9B%BE%E7%89%87/%E5%9B%BE%E7%89%872.png" alt=""></li>
</ol>
</li>
<li><ol start="3">
<li>分析网址与请求<br>其中请求的网址为：<a href="http://fanyi.youdao.com/translate_o?smartresult=dict&amp;smartresult=rule，我们可以发现其中的smartresult=dict这一段话才是传输的数据，并且数据是以dict的方式进行存储并传输过去的。" target="_blank" rel="noopener">http://fanyi.youdao.com/translate_o?smartresult=dict&amp;smartresult=rule，我们可以发现其中的smartresult=dict这一段话才是传输的数据，并且数据是以dict的方式进行存储并传输过去的。</a><br><img src="/images/test%E5%9B%BE%E7%89%87/%E5%9B%BE%E7%89%873.png" alt=""></li>
</ol>
</li>
<li><ol start="4">
<li>分析FromData的表单格式<br>我们可以发现表单中的i对应的key的值就是我们输入的翻译的内容<br><img src="/images/test%E5%9B%BE%E7%89%87/%E5%9B%BE%E7%89%874.png" alt=""><h3 id="三、代码的撰写"><a href="#三、代码的撰写" class="headerlink" title="三、代码的撰写"></a>三、代码的撰写</h3></li>
</ol>
</li>
<li><ol>
<li>首先要导入代码的必要请求头<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> time</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
<li><ol start="2">
<li>构造请求头<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fanyi</span><span class="params">(key)</span>:</span></span><br><span class="line">    url =  <span class="string">"http://fanyi.youdao.com/translate?smartresult=dict&amp;smartresult=rule"</span></span><br><span class="line">    agent1 = <span class="string">"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36"</span></span><br><span class="line">    agent2 = <span class="string">"Mozilla/5.0 (iPad; CPU OS 5_0 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9A334 Safari/7534.48.3"</span></span><br><span class="line">    agent3 = <span class="string">"Mozilla/5.0 (Windows NT 6.2; WOW64; rv:21.0) Gecko/20100101 Firefox/21.0"</span></span><br><span class="line">    agent4 = <span class="string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727"</span></span><br><span class="line">    agent_list = [agent1,agent2,agent3,agent4]</span><br><span class="line">    agent = random.choice(agent_list)</span><br><span class="line">    header = &#123;<span class="string">"User-Agent"</span>:agent&#125;</span><br><span class="line">    <span class="comment"># post请求需要提交的数据</span></span><br><span class="line">    formdata = &#123;</span><br><span class="line">        <span class="string">"i"</span>: key,</span><br><span class="line">        <span class="string">"from"</span>: <span class="string">"AUTO"</span>,</span><br><span class="line">        <span class="string">"to"</span>: <span class="string">"AUTO"</span>,</span><br><span class="line">        <span class="string">"smartresult"</span>: <span class="string">"dict"</span>,</span><br><span class="line">        <span class="string">"client"</span>: <span class="string">"fanyideskweb"</span>,</span><br><span class="line">        <span class="string">"salt"</span>: <span class="string">"15695898180107"</span>,</span><br><span class="line">        <span class="string">"sign"</span>: <span class="string">"bf4bfe3da1f8eb780b6f45cfd226e3e0"</span>,</span><br><span class="line">        <span class="string">"ts"</span>: <span class="string">"1569589818010"</span>,</span><br><span class="line">        <span class="string">"bv"</span>: <span class="string">"97ba7c7fb78632ae9b11dcf6be726aee"</span>,</span><br><span class="line">        <span class="string">"doctype"</span>: <span class="string">"json"</span>,</span><br><span class="line">        <span class="string">"version"</span>: <span class="string">"2.1"</span>,</span><br><span class="line">        <span class="string">"keyfrom"</span>: <span class="string">"fanyi.web"</span>,</span><br><span class="line">        <span class="string">"action"</span>: <span class="string">"FY_BY_REALTlME"</span>,</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
<li><ol start="3">
<li>发送Post请求并用re表达式提取信息<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">response = requests.post(url=url,headers = header,data=formdata).content.decode()</span><br><span class="line"><span class="comment"># "tgt":"hello"</span></span><br><span class="line">pat1=re.compile(<span class="string">'"tgt":"(.*?)"'</span>)</span><br><span class="line">data = pat1.findall(response)</span><br><span class="line">str1=<span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">    str1+=i</span><br><span class="line"><span class="keyword">return</span> str1</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
<li><ol start="4">
<li>本篇文章使用的数据说明<br><img src="/images/test%E5%9B%BE%E7%89%87/%E5%9B%BE%E7%89%875.png" alt=""><br>我们主要是进行翻译review_headline和review_body的这两列信息，同时本篇文章的数据是用UTF-8 模式进行保存的csv数据。并且由于一段时间内可能存在无连接请求的可能加入了时间间隔为1s，由于可能出现一端无连接的情况，都是在翻译完成以后立刻进行保存。<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    data = pd.read_csv(<span class="string">"./microwave.csv"</span>, encoding=<span class="string">'UTF-8'</span>, error_bad_lines=<span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> data.review_headline:</span><br><span class="line">        info = fanyi(i)</span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">"./microwave.txt"</span>,<span class="string">'a+'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(str(info)+<span class="string">'\n'</span>)</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<h3 id="四、代码合集"><a href="#四、代码合集" class="headerlink" title="四、代码合集"></a>四、代码合集</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fanyi</span><span class="params">(key)</span>:</span></span><br><span class="line">    url =  <span class="string">"http://fanyi.youdao.com/translate?smartresult=dict&amp;smartresult=rule"</span></span><br><span class="line">    agent1 = <span class="string">"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36"</span></span><br><span class="line">    agent2 = <span class="string">"Mozilla/5.0 (iPad; CPU OS 5_0 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9A334 Safari/7534.48.3"</span></span><br><span class="line">    agent3 = <span class="string">"Mozilla/5.0 (Windows NT 6.2; WOW64; rv:21.0) Gecko/20100101 Firefox/21.0"</span></span><br><span class="line">    agent4 = <span class="string">"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727"</span></span><br><span class="line">    agent_list = [agent1,agent2,agent3,agent4]</span><br><span class="line">    agent = random.choice(agent_list)</span><br><span class="line">    header = &#123;<span class="string">"User-Agent"</span>:agent&#125;</span><br><span class="line">    <span class="comment"># post请求需要提交的数据</span></span><br><span class="line">    formdata = &#123;</span><br><span class="line">        <span class="string">"i"</span>: key,</span><br><span class="line">        <span class="string">"from"</span>: <span class="string">"AUTO"</span>,</span><br><span class="line">        <span class="string">"to"</span>: <span class="string">"AUTO"</span>,</span><br><span class="line">        <span class="string">"smartresult"</span>: <span class="string">"dict"</span>,</span><br><span class="line">        <span class="string">"client"</span>: <span class="string">"fanyideskweb"</span>,</span><br><span class="line">        <span class="string">"salt"</span>: <span class="string">"15695898180107"</span>,</span><br><span class="line">        <span class="string">"sign"</span>: <span class="string">"bf4bfe3da1f8eb780b6f45cfd226e3e0"</span>,</span><br><span class="line">        <span class="string">"ts"</span>: <span class="string">"1569589818010"</span>,</span><br><span class="line">        <span class="string">"bv"</span>: <span class="string">"97ba7c7fb78632ae9b11dcf6be726aee"</span>,</span><br><span class="line">        <span class="string">"doctype"</span>: <span class="string">"json"</span>,</span><br><span class="line">        <span class="string">"version"</span>: <span class="string">"2.1"</span>,</span><br><span class="line">        <span class="string">"keyfrom"</span>: <span class="string">"fanyi.web"</span>,</span><br><span class="line">        <span class="string">"action"</span>: <span class="string">"FY_BY_REALTlME"</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    response = requests.post(url=url,headers = header,data=formdata).content.decode()</span><br><span class="line">    <span class="comment"># "tgt":"hello"</span></span><br><span class="line">    pat1=re.compile(<span class="string">'"tgt":"(.*?)"'</span>)</span><br><span class="line">    data = pat1.findall(response)</span><br><span class="line">    str1=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">        str1+=i</span><br><span class="line">    <span class="keyword">return</span> str1</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    data = pd.read_csv(<span class="string">"./microwave.csv"</span>, encoding=<span class="string">'UTF-8'</span>, error_bad_lines=<span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> data.review_headline:</span><br><span class="line">        info = fanyi(i)</span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">"./microwave.txt"</span>,<span class="string">'a+'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(str(info)+<span class="string">'\n'</span>)</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
<li>输出的数据如下<br><img src="/images/test%E5%9B%BE%E7%89%87/%E5%9B%BE%E7%89%876.png" alt=""></li>
</ul>
<h3 id="五、总结"><a href="#五、总结" class="headerlink" title="五、总结"></a>五、总结</h3><p>转载请注明出处，禁止一切商业用途，目的：仅供学习与使用翻译端口没有任何其他目的。欢迎各位大佬指正错误，有问题请在下方留言，或者点击左边的微信/QQ加我进行联系。看到后会第一时间进行回复。</p>
]]></content>
      <categories>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
        <tag>端口</tag>
        <tag>翻译</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/03/02/hello-world/</url>
    <content><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><a id="more"></a>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
